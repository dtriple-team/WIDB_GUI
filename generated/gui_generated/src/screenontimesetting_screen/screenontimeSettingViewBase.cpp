/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screenontimesetting_screen/screenontimeSettingViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

screenontimeSettingViewBase::screenontimeSettingViewBase() :
    updateItemCallback(this, &screenontimeSettingViewBase::updateItemCallbackHandler)
{
    __background.setPosition(0, 0, 240, 280);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    background.setXY(0, 0);
    background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_ID));
    add(background);

    screenontime.setPosition(0, 6, 240, 25);
    screenontime.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    screenontime.setLinespacing(0);
    screenontime.setTypedText(touchgfx::TypedText(T_SCREENONTIME));
    add(screenontime);

    scrollWheel1.setPosition(22, 54, 197, 153);
    scrollWheel1.setHorizontal(false);
    scrollWheel1.setCircular(false);
    scrollWheel1.setEasingEquation(touchgfx::EasingEquations::backEaseOut);
    scrollWheel1.setSwipeAcceleration(12);
    scrollWheel1.setDragAcceleration(12);
    scrollWheel1.setNumberOfItems(6);
    scrollWheel1.setSelectedItemOffset(53);
    scrollWheel1.setOvershootPercentage(75);
    scrollWheel1.setSelectedItemExtraSize(0, 0);
    scrollWheel1.setSelectedItemMargin(0, 0);
    scrollWheel1.setDrawableSize(46, 0);
    scrollWheel1.setDrawables(scrollWheel1ListItems, updateItemCallback,
    
                          scrollWheel1SelectedListItems, updateItemCallback);
    scrollWheel1.animateToItem(1, 0);
    add(scrollWheel1);

    image1.setXY(22, 107);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_SELECTLINE_ID));
    add(image1);

    button1.setXY(48, 215);
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_RECTANGLE_14_ID), touchgfx::Bitmap(BITMAP_RECTANGLEPRESSED_ID));
    add(button1);

    textArea2.setPosition(48, 222, 144, 29);
    textArea2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea2.setLinespacing(0);
    textArea2.setTypedText(touchgfx::TypedText(T_SCREENONTIMEAPPLY));
    add(textArea2);

    batteryprogress.setXY(197, 8);
    batteryprogress.setProgressIndicatorPosition(2, 2, 27, 11);
    batteryprogress.setRange(0, 100);
    batteryprogress.setDirection(touchgfx::AbstractDirectionProgress::RIGHT);
    batteryprogress.setBackground(touchgfx::Bitmap(BITMAP_GROUP_6_ID));
    batteryprogress.setBitmap(BITMAP_BATTPERCENTAGE_ID);
    batteryprogress.setValue(90);
    batteryprogress.setAnchorAtZero(true);
    add(batteryprogress);
}

screenontimeSettingViewBase::~screenontimeSettingViewBase()
{

}

void screenontimeSettingViewBase::setupScreen()
{
    scrollWheel1.initialize();
    for (int i = 0; i < scrollWheel1ListItems.getNumberOfDrawables(); i++)
    {
        scrollWheel1ListItems[i].initialize();
    }
    for (int i = 0; i < scrollWheel1SelectedListItems.getNumberOfDrawables(); i++)
    {
        scrollWheel1SelectedListItems[i].initialize();
    }
}

void screenontimeSettingViewBase::updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex)
{
    if (items == &scrollWheel1ListItems)
    {
        touchgfx::Drawable* d = items->getDrawable(containerIndex);
        setting_screenontime_notselected* cc = (setting_screenontime_notselected*)d;
        scrollWheel1UpdateItem(*cc, itemIndex);
    }
    if (items == &scrollWheel1SelectedListItems)
    {
        touchgfx::Drawable* d = items->getDrawable(containerIndex);
        setting_screenontime_selected* cc = (setting_screenontime_selected*)d;
        scrollWheel1UpdateCenterItem(*cc, itemIndex);
    }
}
