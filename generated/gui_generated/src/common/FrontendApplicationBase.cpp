/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <new>
#include <gui_generated/common/FrontendApplicationBase.hpp>
#include <gui/common/FrontendHeap.hpp>
#include <touchgfx/transitions/NoTransition.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Texts.hpp>
#include <touchgfx/hal/HAL.hpp>
#include <platform/driver/lcd/LCD24bpp.hpp>
#include <gui/homescreenwithbiodata_screen/HomeScreenWithBiodataView.hpp>
#include <gui/homescreenwithbiodata_screen/HomeScreenWithBiodataPresenter.hpp>
#include <gui/sleepscreen_screen/SleepScreenView.hpp>
#include <gui/sleepscreen_screen/SleepScreenPresenter.hpp>
#include <gui/spo2screen_screen/Spo2ScreenView.hpp>
#include <gui/spo2screen_screen/Spo2ScreenPresenter.hpp>
#include <gui/heartratescreen_screen/HeartrateScreenView.hpp>
#include <gui/heartratescreen_screen/HeartrateScreenPresenter.hpp>
#include <gui/stepsscreen_screen/StepsScreenView.hpp>
#include <gui/stepsscreen_screen/StepsScreenPresenter.hpp>
#include <gui/heartratedetail_screen/HeartrateDetailView.hpp>
#include <gui/heartratedetail_screen/HeartrateDetailPresenter.hpp>
#include <gui/spo2detail_screen/Spo2DetailView.hpp>
#include <gui/spo2detail_screen/Spo2DetailPresenter.hpp>
#include <gui/swipeupfromhome_screen/swipeupfromHomeView.hpp>
#include <gui/swipeupfromhome_screen/swipeupfromHomePresenter.hpp>
#include <gui/notificationscreen_screen/NotificationScreenView.hpp>
#include <gui/notificationscreen_screen/NotificationScreenPresenter.hpp>
#include <gui/settingscreen_screen/SettingScreenView.hpp>
#include <gui/settingscreen_screen/SettingScreenPresenter.hpp>
#include <gui/screensetting_screen/screenSettingView.hpp>
#include <gui/screensetting_screen/screenSettingPresenter.hpp>
#include <gui/screenontimesetting_screen/screenontimeSettingView.hpp>
#include <gui/screenontimesetting_screen/screenontimeSettingPresenter.hpp>
#include <gui/screenbrightnesssetting_screen/screenbrightnessSettingView.hpp>
#include <gui/screenbrightnesssetting_screen/screenbrightnessSettingPresenter.hpp>
#include <gui/soundnhapticssetting_screen/soundnhapticsSettingView.hpp>
#include <gui/soundnhapticssetting_screen/soundnhapticsSettingPresenter.hpp>
#include <gui/languagesetting_screen/languageSettingView.hpp>
#include <gui/languagesetting_screen/languageSettingPresenter.hpp>
#include <gui/wifisetting_screen/wifiSettingView.hpp>
#include <gui/wifisetting_screen/wifiSettingPresenter.hpp>
#include <gui/informationsetting_screen/informationSettingView.hpp>
#include <gui/informationsetting_screen/informationSettingPresenter.hpp>
#include <gui/deviceinfosetting_screen/deviceInfoSettingView.hpp>
#include <gui/deviceinfosetting_screen/deviceInfoSettingPresenter.hpp>
#include <gui/networkinfosetting_screen/networkInfoSettingView.hpp>
#include <gui/networkinfosetting_screen/networkInfoSettingPresenter.hpp>
#include <gui/systemsetting_screen/systemSettingView.hpp>
#include <gui/systemsetting_screen/systemSettingPresenter.hpp>
#include <gui/turnoffscreen_screen/turnoffScreenView.hpp>
#include <gui/turnoffscreen_screen/turnoffScreenPresenter.hpp>
#include <gui/englishkeyboard_screen/englishKeyboardView.hpp>
#include <gui/englishkeyboard_screen/englishKeyboardPresenter.hpp>
#include <gui/numberkeyboard_screen/numberKeyboardView.hpp>
#include <gui/numberkeyboard_screen/numberKeyboardPresenter.hpp>
#include <gui/characterkeyboard_screen/characterKeyboardView.hpp>
#include <gui/characterkeyboard_screen/characterKeyboardPresenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
    touchgfx::Texts::setLanguage(GB);
    reinterpret_cast<touchgfx::LCD24bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
    reinterpret_cast<touchgfx::LCD24bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
}

/*
 * Screen Transition Declarations
 */

// HomeScreenWithBiodata

void FrontendApplicationBase::gotoHomeScreenWithBiodataScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoHomeScreenWithBiodataScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoHomeScreenWithBiodataScreenNoTransitionImpl()
{
    touchgfx::makeTransition<HomeScreenWithBiodataView, HomeScreenWithBiodataPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// SleepScreen

void FrontendApplicationBase::gotoSleepScreenScreenCoverTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoSleepScreenScreenCoverTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoSleepScreenScreenCoverTransitionEastImpl()
{
    touchgfx::makeTransition<SleepScreenView, SleepScreenPresenter, touchgfx::CoverTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// Spo2Screen

void FrontendApplicationBase::gotoSpo2ScreenScreenCoverTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoSpo2ScreenScreenCoverTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoSpo2ScreenScreenCoverTransitionEastImpl()
{
    touchgfx::makeTransition<Spo2ScreenView, Spo2ScreenPresenter, touchgfx::CoverTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// HeartrateScreen

void FrontendApplicationBase::gotoHeartrateScreenScreenCoverTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoHeartrateScreenScreenCoverTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoHeartrateScreenScreenCoverTransitionEastImpl()
{
    touchgfx::makeTransition<HeartrateScreenView, HeartrateScreenPresenter, touchgfx::CoverTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// StepsScreen

void FrontendApplicationBase::gotoStepsScreenScreenCoverTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoStepsScreenScreenCoverTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoStepsScreenScreenCoverTransitionEastImpl()
{
    touchgfx::makeTransition<StepsScreenView, StepsScreenPresenter, touchgfx::CoverTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// SettingScreen

void FrontendApplicationBase::gotoSettingScreenScreenWipeTransitionNorth()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoSettingScreenScreenWipeTransitionNorthImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoSettingScreenScreenWipeTransitionNorthImpl()
{
    touchgfx::makeTransition<SettingScreenView, SettingScreenPresenter, touchgfx::WipeTransition<NORTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// screenSetting

void FrontendApplicationBase::gotoscreenSettingScreenCoverTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoscreenSettingScreenCoverTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoscreenSettingScreenCoverTransitionEastImpl()
{
    touchgfx::makeTransition<screenSettingView, screenSettingPresenter, touchgfx::CoverTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// screenontimeSetting

void FrontendApplicationBase::gotoscreenontimeSettingScreenCoverTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoscreenontimeSettingScreenCoverTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoscreenontimeSettingScreenCoverTransitionEastImpl()
{
    touchgfx::makeTransition<screenontimeSettingView, screenontimeSettingPresenter, touchgfx::CoverTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// screenbrightnessSetting

void FrontendApplicationBase::gotoscreenbrightnessSettingScreenCoverTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoscreenbrightnessSettingScreenCoverTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoscreenbrightnessSettingScreenCoverTransitionEastImpl()
{
    touchgfx::makeTransition<screenbrightnessSettingView, screenbrightnessSettingPresenter, touchgfx::CoverTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// soundnhapticsSetting

void FrontendApplicationBase::gotosoundnhapticsSettingScreenCoverTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotosoundnhapticsSettingScreenCoverTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotosoundnhapticsSettingScreenCoverTransitionEastImpl()
{
    touchgfx::makeTransition<soundnhapticsSettingView, soundnhapticsSettingPresenter, touchgfx::CoverTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// languageSetting

void FrontendApplicationBase::gotolanguageSettingScreenCoverTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotolanguageSettingScreenCoverTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotolanguageSettingScreenCoverTransitionEastImpl()
{
    touchgfx::makeTransition<languageSettingView, languageSettingPresenter, touchgfx::CoverTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// wifiSetting

void FrontendApplicationBase::gotowifiSettingScreenCoverTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotowifiSettingScreenCoverTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotowifiSettingScreenCoverTransitionEastImpl()
{
    touchgfx::makeTransition<wifiSettingView, wifiSettingPresenter, touchgfx::CoverTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// informationSetting

void FrontendApplicationBase::gotoinformationSettingScreenCoverTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoinformationSettingScreenCoverTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoinformationSettingScreenCoverTransitionEastImpl()
{
    touchgfx::makeTransition<informationSettingView, informationSettingPresenter, touchgfx::CoverTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// deviceInfoSetting

void FrontendApplicationBase::gotodeviceInfoSettingScreenCoverTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotodeviceInfoSettingScreenCoverTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotodeviceInfoSettingScreenCoverTransitionEastImpl()
{
    touchgfx::makeTransition<deviceInfoSettingView, deviceInfoSettingPresenter, touchgfx::CoverTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// networkInfoSetting

void FrontendApplicationBase::gotonetworkInfoSettingScreenCoverTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotonetworkInfoSettingScreenCoverTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotonetworkInfoSettingScreenCoverTransitionEastImpl()
{
    touchgfx::makeTransition<networkInfoSettingView, networkInfoSettingPresenter, touchgfx::CoverTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// systemSetting

void FrontendApplicationBase::gotosystemSettingScreenCoverTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotosystemSettingScreenCoverTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotosystemSettingScreenCoverTransitionEastImpl()
{
    touchgfx::makeTransition<systemSettingView, systemSettingPresenter, touchgfx::CoverTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// englishKeyboard

void FrontendApplicationBase::gotoenglishKeyboardScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoenglishKeyboardScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoenglishKeyboardScreenNoTransitionImpl()
{
    touchgfx::makeTransition<englishKeyboardView, englishKeyboardPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// numberKeyboard

void FrontendApplicationBase::gotonumberKeyboardScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotonumberKeyboardScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotonumberKeyboardScreenNoTransitionImpl()
{
    touchgfx::makeTransition<numberKeyboardView, numberKeyboardPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// characterKeyboard

void FrontendApplicationBase::gotocharacterKeyboardScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotocharacterKeyboardScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotocharacterKeyboardScreenNoTransitionImpl()
{
    touchgfx::makeTransition<characterKeyboardView, characterKeyboardPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}
