/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screensetting_screen/screenSettingViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

screenSettingViewBase::screenSettingViewBase() :
    buttonCallback(this, &screenSettingViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 240, 280);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    background.setXY(0, 0);
    background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_ID));
    add(background);

    Screen.setPosition(0, 6, 240, 25);
    Screen.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Screen.setLinespacing(0);
    Screen.setTypedText(touchgfx::TypedText(T_SCREEN));
    add(Screen);

    image1.setXY(14, 48);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_RECTANGLE_26_ID));
    add(image1);

    image1_1.setXY(14, 109);
    image1_1.setBitmap(touchgfx::Bitmap(BITMAP_RECTANGLE_26_ID));
    add(image1_1);

    textArea1.setPosition(66, 59, 140, 25);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T_SCREENONTIMETEXT));
    add(textArea1);

    textArea1_1.setPosition(66, 120, 140, 25);
    textArea1_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1_1.setLinespacing(0);
    textArea1_1.setTypedText(touchgfx::TypedText(T_SCREENBRIGHTNESSTEXT));
    add(textArea1_1);

    image2.setXY(211, 58);
    image2.setBitmap(touchgfx::Bitmap(BITMAP_RIGHT_ID));
    add(image2);

    image2_1.setXY(211, 120);
    image2_1.setBitmap(touchgfx::Bitmap(BITMAP_RIGHT_ID));
    add(image2_1);

    button1.setXY(56, 43);
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUNDED_INACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUNDED_INACTIVE_ID));
    button1.setAlpha(0);
    button1.setAction(buttonCallback);
    add(button1);

    button2.setXY(56, 104);
    button2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUNDED_INACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUNDED_INACTIVE_ID));
    button2.setAlpha(0);
    button2.setAction(buttonCallback);
    add(button2);

    batteryprogress.setXY(197, 8);
    batteryprogress.setProgressIndicatorPosition(2, 2, 27, 11);
    batteryprogress.setRange(0, 100);
    batteryprogress.setDirection(touchgfx::AbstractDirectionProgress::RIGHT);
    batteryprogress.setBackground(touchgfx::Bitmap(BITMAP_GROUP_6_ID));
    batteryprogress.setBitmap(BITMAP_BATTPERCENTAGE_ID);
    batteryprogress.setValue(90);
    batteryprogress.setAnchorAtZero(true);
    add(batteryprogress);
}

screenSettingViewBase::~screenSettingViewBase()
{

}

void screenSettingViewBase::setupScreen()
{

}

void screenSettingViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &button1)
    {
        //setscreenontime
        //When button1 clicked change screen to screenontimeSetting
        //Go to screenontimeSetting with screen transition towards East
        application().gotoscreenontimeSettingScreenCoverTransitionEast();
    }
    if (&src == &button2)
    {
        //setscreenbrightness
        //When button2 clicked change screen to screenbrightnessSetting
        //Go to screenbrightnessSetting with screen transition towards East
        application().gotoscreenbrightnessSettingScreenCoverTransitionEast();
    }
}
